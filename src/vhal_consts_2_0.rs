// SPDX-FileCopyrightText: Red Hat, Inc.
// SPDX-License-Identifier: GPL-2.0-or-later

// Writen based on the definitions at 'data/types.hal'
// Source file copied from hardware/interfaces/automotive/vehicle/2.0/types.hal
// TODO: This file shall be auto generated

#![allow(dead_code)]
#![allow(non_camel_case_types)]
#![allow(non_upper_case_globals)]

use num_enum::TryFromPrimitive;

/// Enumerates supported data type for VehicleProperty.
/// Used to create property ID in VehicleProperty enum.
#[derive(Debug, Clone, Copy, Eq, PartialEq, TryFromPrimitive)]
#[repr(i32)]
pub enum VehiclePropertyType {
    STRING = 0x100000,
    BOOLEAN = 0x200000,
    INT32 = 0x400000,
    INT32_VEC = 0x410000,
    INT64 = 0x500000,
    INT64_VEC = 0x510000,
    FLOAT = 0x600000,
    FLOAT_VEC = 0x610000,
    BYTES = 0x700000,
    MIXED = 0xe00000,
    MASK = 0xff0000,
}

impl VehiclePropertyType {
    pub fn is_string(&self) -> bool {
        matches!(self, Self::STRING)
    }

    pub fn is_bytes(&self) -> bool {
        matches!(self, Self::BYTES)
    }

    pub fn is_int32(&self) -> bool {
        matches!(self, Self::BOOLEAN) || matches!(self, Self::INT32)
    }

    pub fn is_int64(&self) -> bool {
        matches!(self, Self::INT64)
    }

    pub fn is_float(&self) -> bool {
        matches!(self, Self::FLOAT)
    }

    pub fn is_int32s(&self) -> bool {
        matches!(self, Self::INT32_VEC)
    }

    pub fn is_int64s(&self) -> bool {
        matches!(self, Self::INT64_VEC)
    }

    pub fn is_floats(&self) -> bool {
        matches!(self, Self::FLOAT_VEC)
    }

    pub fn is_mixed(&self) -> bool {
        matches!(self, Self::MIXED)
    }
}

/// VehicleArea
const VEHICLEAREA_GLOBAL: u32 = 0x1000000;
const VEHICLEAREA_WINDOW: u32 = 0x3000000;
const VEHICLEAREA_MIRROR: u32 = 0x4000000;
const VEHICLEAREA_SEAT: u32 = 0x5000000;
const VEHICLEAREA_DOOR: u32 = 0x6000000;
const VEHICLEAREA_WHEEL: u32 = 0x7000000;
const VEHICLEAREA_MASK: u32 = 0xf000000;

/// VEHICLEPROPERTYGroup
const VEHICLEPROPERTYGROUP_SYSTEM: u32 = 0x10000000;
const VEHICLEPROPERTYGROUP_VENDOR: u32 = 0x20000000;
const VEHICLEPROPERTYGROUP_MASK: u32 = 0xf0000000;

/// Declares all vehicle properties. VehicleProperty has a bitwise structure.
/// Each property must have:
///  - a unique id from range 0x0100 - 0xffff
///  - associated data type using VehiclePropertyType
///  - property group (VehiclePropertyGroup)
///  - vehicle area (VehicleArea)
///
/// Vendors are allowed to extend this enum with their own properties. In this
/// case they must use VehiclePropertyGroup:VENDOR flag when the property is
/// declared.
///
/// When a property's status field is not set to AVAILABLE:
///  - IVehicle#set may return StatusCode::NOT_AVAILABLE.
///  - IVehicle#get is not guaranteed to work.
///
/// Properties set to values out of range must be ignored and no action taken
/// in response to such ill formed requests.
#[derive(Debug, Clone, Copy, Eq, PartialEq, Hash, TryFromPrimitive)]
#[repr(i32)]
pub enum VehicleProperty {
    INVALID = 0x0,
    INFO_VIN = 0x11100100,
    INFO_MAKE = 0x11100101,
    INFO_MODEL = 0x11100102,
    INFO_MODEL_YEAR = 0x11400103,
    INFO_FUEL_CAPACITY = 0x11600104,
    INFO_FUEL_TYPE = 0x11410105,
    INFO_EV_BATTERY_CAPACITY = 0x11600106,
    INFO_EV_CONNECTOR_TYPE = 0x11410107,
    INFO_FUEL_DOOR_LOCATION = 0x11400108,
    INFO_EV_PORT_LOCATION = 0x11400109,
    INFO_DRIVER_SEAT = 0x1540010a,
    INFO_EXTERIOR_DIMENSIONS = 0x1141010b,
    INFO_MULTI_EV_PORT_LOCATIONS = 0x1141010c,
    PERF_ODOMETER = 0x11600204,
    PERF_VEHICLE_SPEED = 0x11600207,
    PERF_VEHICLE_SPEED_DISPLAY = 0x11600208,
    PERF_STEERING_ANGLE = 0x11600209,
    PERF_REAR_STEERING_ANGLE = 0x11600210,
    ENGINE_COOLANT_TEMP = 0x11600301,
    ENGINE_OIL_LEVEL = 0x11400303,
    ENGINE_OIL_TEMP = 0x11600304,
    ENGINE_RPM = 0x11600305,
    WHEEL_TICK = 0x11510306,
    FUEL_LEVEL = 0x11600307,
    FUEL_DOOR_OPEN = 0x11200308,
    EV_BATTERY_LEVEL = 0x11600309,
    EV_CHARGE_PORT_OPEN = 0x1120030a,
    EV_CHARGE_PORT_CONNECTED = 0x1120030b,
    EV_BATTERY_INSTANTANEOUS_CHARGE_RATE = 0x1160030c,
    RANGE_REMAINING = 0x11600308,
    TIRE_PRESSURE = 0x17600309,
    GEAR_SELECTION = 0x11400400,
    CURRENT_GEAR = 0x11400401,
    PARKING_BRAKE_ON = 0x11200402,
    PARKING_BRAKE_AUTO_APPLY = 0x11200403,
    FUEL_LEVEL_LOW = 0x11200405,
    NIGHT_MODE = 0x11200407,
    TURN_SIGNAL_STATE = 0x11400408,
    IGNITION_STATE = 0x11400409,
    ABS_ACTIVE = 0x1120040a,
    TRACTION_CONTROL_ACTIVE = 0x1120040b,
    HVAC_FAN_SPEED = 0x15400500,
    HVAC_FAN_DIRECTION = 0x15400501,
    HVAC_TEMPERATURE_CURRENT = 0x15600502,
    HVAC_TEMPERATURE_SET = 0x15600503,
    HVAC_DEFROSTER = 0x13200504,
    HVAC_AC_ON = 0x15200505,
    HVAC_MAX_AC_ON = 0x15200506,
    HVAC_MAX_DEFROST_ON = 0x15200507,
    HVAC_RECIRC_ON = 0x15200508,
    HVAC_DUAL_ON = 0x15200509,
    HVAC_AUTO_ON = 0x1520050a,
    HVAC_SEAT_TEMPERATURE = 0x1540050b,
    HVAC_SIDE_MIRROR_HEAT = 0x1440050c,
    HVAC_STEERING_WHEEL_HEAT = 0x1140050d,
    HVAC_TEMPERATURE_DISPLAY_UNITS = 0x1140050e,
    HVAC_ACTUAL_FAN_SPEED_RPM = 0x1540050f,
    HVAC_POWER_ON = 0x15200510,
    HVAC_FAN_DIRECTION_AVAILABLE = 0x15410511,
    HVAC_AUTO_RECIRC_ON = 0x15200512,
    HVAC_SEAT_VENTILATION = 0x15400513,
    HVAC_ELECTRIC_DEFROSTER_ON = 0x13200514,
    DISTANCE_DISPLAY_UNITS = 0x11400600,
    FUEL_VOLUME_DISPLAY_UNITS = 0x11400601,
    TIRE_PRESSURE_DISPLAY_UNITS = 0x11400602,
    EV_BATTERY_DISPLAY_UNITS = 0x11400603,
    FUEL_CONSUMPTION_UNITS_DISTANCE_OVER_VOLUME = 0x11200604,
    VEHICLE_SPEED_DISPLAY_UNITS = 0x11400605,
    ENV_OUTSIDE_TEMPERATURE = 0x11600703,
    AP_POWER_STATE_REQ = 0x11410a00,
    AP_POWER_STATE_REPORT = 0x11410a01,
    AP_POWER_BOOTUP_REASON = 0x11400a02,
    DISPLAY_BRIGHTNESS = 0x11400a03,
    HW_KEY_INPUT = 0x11410a10,
    HW_ROTARY_INPUT = 0x11410a20,
    DOOR_POS = 0x16400b00,
    DOOR_MOVE = 0x16400b01,
    DOOR_LOCK = 0x16200b02,
    MIRROR_Z_POS = 0x14400b40,
    MIRROR_Z_MOVE = 0x14400b41,
    MIRROR_Y_POS = 0x14400b42,
    MIRROR_Y_MOVE = 0x14400b43,
    MIRROR_LOCK = 0x11200b44,
    MIRROR_FOLD = 0x11200b45,
    SEAT_MEMORY_SELECT = 0x15400b80,
    SEAT_MEMORY_SET = 0x15400b81,
    SEAT_BELT_BUCKLED = 0x15200b82,
    SEAT_BELT_HEIGHT_POS = 0x15400b83,
    SEAT_BELT_HEIGHT_MOVE = 0x15400b84,
    SEAT_FORE_AFT_POS = 0x15400b85,
    SEAT_FORE_AFT_MOVE = 0x15400b86,
    SEAT_BACKREST_ANGLE_1_POS = 0x15400b87,
    SEAT_BACKREST_ANGLE_1_MOVE = 0x15400b88,
    SEAT_BACKREST_ANGLE_2_POS = 0x15400b89,
    SEAT_BACKREST_ANGLE_2_MOVE = 0x15400b8a,
    SEAT_HEIGHT_POS = 0x15400b8b,
    SEAT_HEIGHT_MOVE = 0x15400b8c,
    SEAT_DEPTH_POS = 0x15400b8d,
    SEAT_DEPTH_MOVE = 0x15400b8e,
    SEAT_TILT_POS = 0x15400b8f,
    SEAT_TILT_MOVE = 0x15400b90,
    SEAT_LUMBAR_FORE_AFT_POS = 0x15400b91,
    SEAT_LUMBAR_FORE_AFT_MOVE = 0x15400b92,
    SEAT_LUMBAR_SIDE_SUPPORT_POS = 0x15400b93,
    SEAT_LUMBAR_SIDE_SUPPORT_MOVE = 0x15400b94,
    SEAT_HEADREST_HEIGHT_POS = 0x11400b95,
    SEAT_HEADREST_HEIGHT_MOVE = 0x15400b96,
    SEAT_HEADREST_ANGLE_POS = 0x15400b97,
    SEAT_HEADREST_ANGLE_MOVE = 0x15400b98,
    SEAT_HEADREST_FORE_AFT_POS = 0x15400b99,
    SEAT_HEADREST_FORE_AFT_MOVE = 0x15400b9a,
    SEAT_OCCUPANCY = 0x15400bb0,
    WINDOW_POS = 0x13400bc0,
    WINDOW_MOVE = 0x13400bc1,
    WINDOW_LOCK = 0x13200bc4,
    VEHICLE_MAP_SERVICE = 0x11e00c00,
    OBD2_LIVE_FRAME = 0x11e00d00,
    OBD2_FREEZE_FRAME = 0x11e00d01,
    OBD2_FREEZE_FRAME_INFO = 0x11e00d02,
    OBD2_FREEZE_FRAME_CLEAR = 0x11e00d03,
    HEADLIGHTS_STATE = 0x11400e00,
    HIGH_BEAM_LIGHTS_STATE = 0x11400e01,
    FOG_LIGHTS_STATE = 0x11400e02,
    HAZARD_LIGHTS_STATE = 0x11400e03,
    HEADLIGHTS_SWITCH = 0x11400e10,
    HIGH_BEAM_LIGHTS_SWITCH = 0x11400e11,
    FOG_LIGHTS_SWITCH = 0x11400e12,
    HAZARD_LIGHTS_SWITCH = 0x11400e13,
    CABIN_LIGHTS_STATE = 0x11400f01,
    CABIN_LIGHTS_SWITCH = 0x11400f02,
    READING_LIGHTS_STATE = 0x15400f03,
    READING_LIGHTS_SWITCH = 0x15400f04,
    SUPPORT_CUSTOMIZE_VENDOR_PERMISSION = 0x11200f05,
    DISABLED_OPTIONAL_FEATURES = 0x11100f06,
    INITIAL_USER_INFO = 0x11e00f07,
    SWITCH_USER = 0x11e00f08,
    CREATE_USER = 0x11e00f09,
    REMOVE_USER = 0x11e00f0a,
    USER_IDENTIFICATION_ASSOCIATION = 0x11e00f0b,
}

/// VehicleVendorPermission
const VEHICLEVENDORPERMISSION_PERMISSION_DEFAULT: u32 = 0x0;
const VEHICLEVENDORPERMISSION_PERMISSION_SET_VENDOR_CATEGORY_WINDOW: u32 = 0x1;
const VEHICLEVENDORPERMISSION_PERMISSION_GET_VENDOR_CATEGORY_WINDOW: u32 = 0x2;
const VEHICLEVENDORPERMISSION_PERMISSION_SET_VENDOR_CATEGORY_DOOR: u32 = 0x3;
const VEHICLEVENDORPERMISSION_PERMISSION_GET_VENDOR_CATEGORY_DOOR: u32 = 0x4;
const VEHICLEVENDORPERMISSION_PERMISSION_SET_VENDOR_CATEGORY_SEAT: u32 = 0x5;
const VEHICLEVENDORPERMISSION_PERMISSION_GET_VENDOR_CATEGORY_SEAT: u32 = 0x6;
const VEHICLEVENDORPERMISSION_PERMISSION_SET_VENDOR_CATEGORY_MIRROR: u32 = 0x7;
const VEHICLEVENDORPERMISSION_PERMISSION_GET_VENDOR_CATEGORY_MIRROR: u32 = 0x8;
const VEHICLEVENDORPERMISSION_PERMISSION_SET_VENDOR_CATEGORY_INFO: u32 = 0x9;
const VEHICLEVENDORPERMISSION_PERMISSION_GET_VENDOR_CATEGORY_INFO: u32 = 0xa;
const VEHICLEVENDORPERMISSION_PERMISSION_SET_VENDOR_CATEGORY_ENGINE: u32 = 0xb;
const VEHICLEVENDORPERMISSION_PERMISSION_GET_VENDOR_CATEGORY_ENGINE: u32 = 0xc;
const VEHICLEVENDORPERMISSION_PERMISSION_SET_VENDOR_CATEGORY_HVAC: u32 = 0xd;
const VEHICLEVENDORPERMISSION_PERMISSION_GET_VENDOR_CATEGORY_HVAC: u32 = 0xe;
const VEHICLEVENDORPERMISSION_PERMISSION_SET_VENDOR_CATEGORY_LIGHT: u32 = 0xf;
const VEHICLEVENDORPERMISSION_PERMISSION_GET_VENDOR_CATEGORY_LIGHT: u32 = 0x10;
const VEHICLEVENDORPERMISSION_PERMISSION_SET_VENDOR_CATEGORY_1: u32 = 0x10000;
const VEHICLEVENDORPERMISSION_PERMISSION_GET_VENDOR_CATEGORY_1: u32 = 0x11000;
const VEHICLEVENDORPERMISSION_PERMISSION_SET_VENDOR_CATEGORY_2: u32 = 0x20000;
const VEHICLEVENDORPERMISSION_PERMISSION_GET_VENDOR_CATEGORY_2: u32 = 0x21000;
const VEHICLEVENDORPERMISSION_PERMISSION_SET_VENDOR_CATEGORY_3: u32 = 0x30000;
const VEHICLEVENDORPERMISSION_PERMISSION_GET_VENDOR_CATEGORY_3: u32 = 0x31000;
const VEHICLEVENDORPERMISSION_PERMISSION_SET_VENDOR_CATEGORY_4: u32 = 0x40000;
const VEHICLEVENDORPERMISSION_PERMISSION_GET_VENDOR_CATEGORY_4: u32 = 0x41000;
const VEHICLEVENDORPERMISSION_PERMISSION_SET_VENDOR_CATEGORY_5: u32 = 0x50000;
const VEHICLEVENDORPERMISSION_PERMISSION_GET_VENDOR_CATEGORY_5: u32 = 0x51000;
const VEHICLEVENDORPERMISSION_PERMISSION_SET_VENDOR_CATEGORY_6: u32 = 0x60000;
const VEHICLEVENDORPERMISSION_PERMISSION_GET_VENDOR_CATEGORY_6: u32 = 0x61000;
const VEHICLEVENDORPERMISSION_PERMISSION_SET_VENDOR_CATEGORY_7: u32 = 0x70000;
const VEHICLEVENDORPERMISSION_PERMISSION_GET_VENDOR_CATEGORY_7: u32 = 0x71000;
const VEHICLEVENDORPERMISSION_PERMISSION_SET_VENDOR_CATEGORY_8: u32 = 0x80000;
const VEHICLEVENDORPERMISSION_PERMISSION_GET_VENDOR_CATEGORY_8: u32 = 0x81000;
const VEHICLEVENDORPERMISSION_PERMISSION_SET_VENDOR_CATEGORY_9: u32 = 0x90000;
const VEHICLEVENDORPERMISSION_PERMISSION_GET_VENDOR_CATEGORY_9: u32 = 0x91000;
const VEHICLEVENDORPERMISSION_PERMISSION_SET_VENDOR_CATEGORY_10: u32 = 0xa0000;
const VEHICLEVENDORPERMISSION_PERMISSION_GET_VENDOR_CATEGORY_10: u32 = 0xa1000;
const VEHICLEVENDORPERMISSION_PERMISSION_NOT_ACCESSIBLE: u32 = 0xf0000000;

/// VehicleSeatOccupancyState
const VEHICLESEATOCCUPANCYSTATE_UNKNOWN: u32 = 0x0;
const VEHICLESEATOCCUPANCYSTATE_VACANT: u32 = 0x1;
const VEHICLESEATOCCUPANCYSTATE_OCCUPIED: u32 = 0x2;

/// VehicleLightState;
const VEHICLELIGHTSTATE_OFF: u32 = 0x0;
const VEHICLELIGHTSTATE_ON: u32 = 0x1;
const VEHICLELIGHTSTATE_DAYTIME_RUNNING: u32 = 0x2;

/// VehicleLightSwitch;
const VEHICLELIGHTSWITCH_OFF: u32 = 0x0;
const VEHICLELIGHTSWITCH_ON: u32 = 0x1;
const VEHICLELIGHTSWITCH_DAYTIME_RUNNING: u32 = 0x2;
const VEHICLELIGHTSWITCH_AUTOMATIC: u32 = 0x100;

/// EvConnectorType
const EVCONNECTORTYPE_UNKNOWN: u32 = 0x0;
const EVCONNECTORTYPE_IEC_TYPE_1_AC: u32 = 0x1;
const EVCONNECTORTYPE_IEC_TYPE_2_AC: u32 = 0x2;
const EVCONNECTORTYPE_IEC_TYPE_3_AC: u32 = 0x3;
const EVCONNECTORTYPE_IEC_TYPE_4_DC: u32 = 0x4;
const EVCONNECTORTYPE_IEC_TYPE_1_CCS_DC: u32 = 0x5;
const EVCONNECTORTYPE_IEC_TYPE_2_CCS_DC: u32 = 0x6;
const EVCONNECTORTYPE_TESLA_ROADSTER: u32 = 0x7;
const EVCONNECTORTYPE_TESLA_HPWC: u32 = 0x8;
const EVCONNECTORTYPE_TESLA_SUPERCHARGER: u32 = 0x9;
const EVCONNECTORTYPE_GBT_AC: u32 = 0xa;
const EVCONNECTORTYPE_GBT_DC: u32 = 0xb;
const EVCONNECTORTYPE_OTHER: u32 = 0x65;

/// PortLocationType;
const PORTLOCATIONTYPE_UNKNOWN: u32 = 0x0;
const PORTLOCATIONTYPE_FRONT_LEFT: u32 = 0x1;
const PORTLOCATIONTYPE_FRONT_RIGHT: u32 = 0x2;
const PORTLOCATIONTYPE_REAR_RIGHT: u32 = 0x3;
const PORTLOCATIONTYPE_REAR_LEFT: u32 = 0x4;
const PORTLOCATIONTYPE_FRONT: u32 = 0x5;
const PORTLOCATIONTYPE_REAR: u32 = 0x6;

/// FuelType
const FUELTYPE_FUEL_TYPE_UNKNOWN: u32 = 0x0;
const FUELTYPE_FUEL_TYPE_UNLEADED: u32 = 0x1;
const FUELTYPE_FUEL_TYPE_LEADED: u32 = 0x2;
const FUELTYPE_FUEL_TYPE_DIESEL_1: u32 = 0x3;
const FUELTYPE_FUEL_TYPE_DIESEL_2: u32 = 0x4;
const FUELTYPE_FUEL_TYPE_BIODIESEL: u32 = 0x5;
const FUELTYPE_FUEL_TYPE_E85: u32 = 0x6;
const FUELTYPE_FUEL_TYPE_LPG: u32 = 0x7;
const FUELTYPE_FUEL_TYPE_CNG: u32 = 0x8;
const FUELTYPE_FUEL_TYPE_LNG: u32 = 0x9;
const FUELTYPE_FUEL_TYPE_ELECTRIC: u32 = 0xa;
const FUELTYPE_FUEL_TYPE_HYDROGEN: u32 = 0xb;
const FUELTYPE_FUEL_TYPE_OTHER: u32 = 0xc;

/// VehicleHvacFanDirection
const VEHICLEHVACFANDIRECTION_UNKNOWN: u32 = 0x0;
const VEHICLEHVACFANDIRECTION_FACE: u32 = 0x1;
const VEHICLEHVACFANDIRECTION_FLOOR: u32 = 0x2;
const VEHICLEHVACFANDIRECTION_FACE_AND_FLOOR: u32 = 0x3;
const VEHICLEHVACFANDIRECTION_DEFROST: u32 = 0x4;
const VEHICLEHVACFANDIRECTION_DEFROST_AND_FLOOR: u32 = 0x6;

/// VehicleOilLevel
const VEHICLEOILLEVEL_CRITICALLY_LOW: u32 = 0x0;
const VEHICLEOILLEVEL_LOW: u32 = 0x1;
const VEHICLEOILLEVEL_NORMAL: u32 = 0x2;
const VEHICLEOILLEVEL_HIGH: u32 = 0x3;
const VEHICLEOILLEVEL_ERROR: u32 = 0x4;

/// VehicleApPowerStateConfigFlag
const VEHICLEAPPOWERSTATECONFIGFLAG_ENABLE_DEEP_SLEEP_FLAG: u32 = 0x1;
const VEHICLEAPPOWERSTATECONFIGFLAG_CONFIG_SUPPORT_TIMER_POWER_ON_FLAG: u32 = 0x2;
const VEHICLEAPPOWERSTATECONFIGFLAG_ENABLE_HIBERNATION_FLAG: u32 = 0x4;

/// VehicleApPowerStateReq
const VEHICLEAPPOWERSTATEREQ_ON: u32 = 0x0;
const VEHICLEAPPOWERSTATEREQ_SHUTDOWN_PREPARE: u32 = 0x1;
const VEHICLEAPPOWERSTATEREQ_CANCEL_SHUTDOWN: u32 = 0x2;
const VEHICLEAPPOWERSTATEREQ_FINISHED: u32 = 0x3;

/// VehicleApPowerStateReqIndex
const VEHICLEAPPOWERSTATEREQINDEX_STATE: u32 = 0x0;
const VEHICLEAPPOWERSTATEREQINDEX_ADDITIONAL: u32 = 0x1;

/// VehicleApPowerStateShutdownParam
const VEHICLEAPPOWERSTATESHUTDOWNPARAM_SHUTDOWN_IMMEDIATELY: u32 = 0x1;
const VEHICLEAPPOWERSTATESHUTDOWNPARAM_CAN_SLEEP: u32 = 0x2;
const VEHICLEAPPOWERSTATESHUTDOWNPARAM_SHUTDOWN_ONLY: u32 = 0x3;
const VEHICLEAPPOWERSTATESHUTDOWNPARAM_SLEEP_IMMEDIATELY: u32 = 0x4;

/// VehicleApPowerStateReport
const VEHICLEAPPOWERSTATEREPORT_WAIT_FOR_VHAL: u32 = 0x1;
const VEHICLEAPPOWERSTATEREPORT_DEEP_SLEEP_ENTRY: u32 = 0x2;
const VEHICLEAPPOWERSTATEREPORT_DEEP_SLEEP_EXIT: u32 = 0x3;
const VEHICLEAPPOWERSTATEREPORT_SHUTDOWN_POSTPONE: u32 = 0x4;
const VEHICLEAPPOWERSTATEREPORT_SHUTDOWN_START: u32 = 0x5;
const VEHICLEAPPOWERSTATEREPORT_ON: u32 = 0x6;
const VEHICLEAPPOWERSTATEREPORT_SHUTDOWN_PREPARE: u32 = 0x7;
const VEHICLEAPPOWERSTATEREPORT_SHUTDOWN_CANCELLED: u32 = 0x8;

/// VehicleHwKeyInputAction
const VEHICLEHWKEYINPUTACTION_ACTION_DOWN: u32 = 0x0;
const VEHICLEHWKEYINPUTACTION_ACTION_UP: u32 = 0x1;

/// VehicleDisplay
const VEHICLEDISPLAY_MAIN: u32 = 0x0;
const VEHICLEDISPLAY_INSTRUMENT_CLUSTER: u32 = 0x1;

/// VehicleUnit
const VEHICLEUNIT_SHOULD_NOT_USE: u32 = 0x0;
const VEHICLEUNIT_METER_PER_SEC: u32 = 0x1;
const VEHICLEUNIT_RPM: u32 = 0x2;
const VEHICLEUNIT_HERTZ: u32 = 0x3;
const VEHICLEUNIT_PERCENTILE: u32 = 0x10;
const VEHICLEUNIT_MILLIMETER: u32 = 0x20;
const VEHICLEUNIT_METER: u32 = 0x21;
const VEHICLEUNIT_KILOMETER: u32 = 0x23;
const VEHICLEUNIT_MILE: u32 = 0x24;
const VEHICLEUNIT_CELSIUS: u32 = 0x30;
const VEHICLEUNIT_FAHRENHEIT: u32 = 0x31;
const VEHICLEUNIT_KELVIN: u32 = 0x32;
const VEHICLEUNIT_MILLILITER: u32 = 0x40;
const VEHICLEUNIT_LITER: u32 = 0x41;
const VEHICLEUNIT_GALLON: u32 = 0x42;
const VEHICLEUNIT_US_GALLON: u32 = 0x42;
const VEHICLEUNIT_IMPERIAL_GALLON: u32 = 0x43;
const VEHICLEUNIT_NANO_SECS: u32 = 0x50;
const VEHICLEUNIT_SECS: u32 = 0x53;
const VEHICLEUNIT_YEAR: u32 = 0x59;
const VEHICLEUNIT_WATT_HOUR: u32 = 0x60;
const VEHICLEUNIT_MILLIAMPERE: u32 = 0x61;
const VEHICLEUNIT_MILLIVOLT: u32 = 0x62;
const VEHICLEUNIT_MILLIWATTS: u32 = 0x63;
const VEHICLEUNIT_AMPERE_HOURS: u32 = 0x64;
const VEHICLEUNIT_KILOWATT_HOUR: u32 = 0x65;
const VEHICLEUNIT_KILOPASCAL: u32 = 0x70;
const VEHICLEUNIT_PSI: u32 = 0x71;
const VEHICLEUNIT_BAR: u32 = 0x72;
const VEHICLEUNIT_DEGREES: u32 = 0x80;
const VEHICLEUNIT_MILES_PER_HOUR: u32 = 0x90;
const VEHICLEUNIT_KILOMETERS_PER_HOUR: u32 = 0x91;

/// VEHICLEPROPERTYChangeMode
const VEHICLEPROPERTYCHANGEMODE_STATIC: u32 = 0x0;
const VEHICLEPROPERTYCHANGEMODE_ON_CHANGE: u32 = 0x1;
const VEHICLEPROPERTYCHANGEMODE_CONTINUOUS: u32 = 0x2;

/// VEHICLEPROPERTYAccess
const VEHICLEPROPERTYACCESS_NONE: u32 = 0x0;
const VEHICLEPROPERTYACCESS_READ: u32 = 0x1;
const VEHICLEPROPERTYACCESS_WRITE: u32 = 0x2;
const VEHICLEPROPERTYACCESS_READ_WRITE: u32 = 0x3;

/// Various gears which can be selected by user and chosen in system.
#[derive(Debug, Eq, PartialEq, TryFromPrimitive)]
#[repr(i32)]
pub enum VehicleGear {
    GEAR_UNKNOWN = 0x0,
    GEAR_NEUTRAL = 0x1,
    GEAR_REVERSE = 0x2,
    GEAR_PARK = 0x4,
    GEAR_DRIVE = 0x8,
    GEAR_1 = 0x10,
    GEAR_2 = 0x20,
    GEAR_3 = 0x40,
    GEAR_4 = 0x80,
    GEAR_5 = 0x100,
    GEAR_6 = 0x200,
    GEAR_7 = 0x400,
    GEAR_8 = 0x800,
    GEAR_9 = 0x1000,
}

/// VehicleAreaSeat
const VEHICLEAREASEAT_ROW_1_LEFT: u32 = 0x1;
const VEHICLEAREASEAT_ROW_1_CENTER: u32 = 0x2;
const VEHICLEAREASEAT_ROW_1_RIGHT: u32 = 0x4;
const VEHICLEAREASEAT_ROW_2_LEFT: u32 = 0x10;
const VEHICLEAREASEAT_ROW_2_CENTER: u32 = 0x20;
const VEHICLEAREASEAT_ROW_2_RIGHT: u32 = 0x40;
const VEHICLEAREASEAT_ROW_3_LEFT: u32 = 0x100;
const VEHICLEAREASEAT_ROW_3_CENTER: u32 = 0x200;
const VEHICLEAREASEAT_ROW_3_RIGHT: u32 = 0x400;

/// VehicleAreaWindow
const VEHICLEAREAWINDOW_FRONT_WINDSHIELD: u32 = 0x1;
const VEHICLEAREAWINDOW_REAR_WINDSHIELD: u32 = 0x2;
const VEHICLEAREAWINDOW_ROW_1_LEFT: u32 = 0x10;
const VEHICLEAREAWINDOW_ROW_1_RIGHT: u32 = 0x40;
const VEHICLEAREAWINDOW_ROW_2_LEFT: u32 = 0x100;
const VEHICLEAREAWINDOW_ROW_2_RIGHT: u32 = 0x400;
const VEHICLEAREAWINDOW_ROW_3_LEFT: u32 = 0x1000;
const VEHICLEAREAWINDOW_ROW_3_RIGHT: u32 = 0x4000;
const VEHICLEAREAWINDOW_ROOF_TOP_1: u32 = 0x10000;
const VEHICLEAREAWINDOW_ROOF_TOP_2: u32 = 0x20000;

/// VehicleAreaDoor
const VEHICLEAREADOOR_ROW_1_LEFT: u32 = 0x1;
const VEHICLEAREADOOR_ROW_1_RIGHT: u32 = 0x4;
const VEHICLEAREADOOR_ROW_2_LEFT: u32 = 0x10;
const VEHICLEAREADOOR_ROW_2_RIGHT: u32 = 0x40;
const VEHICLEAREADOOR_ROW_3_LEFT: u32 = 0x100;
const VEHICLEAREADOOR_ROW_3_RIGHT: u32 = 0x400;
const VEHICLEAREADOOR_HOOD: u32 = 0x10000000;
const VEHICLEAREADOOR_REAR: u32 = 0x20000000;

/// VehicleAreaMirror
const VEHICLEAREAMIRROR_DRIVER_LEFT: u32 = 0x1;
const VEHICLEAREAMIRROR_DRIVER_RIGHT: u32 = 0x2;
const VEHICLEAREAMIRROR_DRIVER_CENTER: u32 = 0x4;

/// VehicleTurnSignal
const VEHICLETURNSIGNAL_NONE: u32 = 0x0;
const VEHICLETURNSIGNAL_RIGHT: u32 = 0x1;
const VEHICLETURNSIGNAL_LEFT: u32 = 0x2;

/// VehicleIgnitionState
const VEHICLEIGNITIONSTATE_UNDEFINED: u32 = 0x0;
const VEHICLEIGNITIONSTATE_LOCK: u32 = 0x1;
const VEHICLEIGNITIONSTATE_OFF: u32 = 0x2;
const VEHICLEIGNITIONSTATE_ACC: u32 = 0x3;
const VEHICLEIGNITIONSTATE_ON: u32 = 0x4;
const VEHICLEIGNITIONSTATE_START: u32 = 0x5;

/// SubscribeFlags
const SUBSCRIBEFLAGS_UNDEFINED: u32 = 0x0;
const SUBSCRIBEFLAGS_EVENTS_FROM_CAR: u32 = 0x1;
const SUBSCRIBEFLAGS_EVENTS_FROM_ANDROID: u32 = 0x2;

/// StatusCode
const STATUSCODE_OK: u32 = 0x0;
const STATUSCODE_TRY_AGAIN: u32 = 0x1;
const STATUSCODE_INVALID_ARG: u32 = 0x2;
const STATUSCODE_NOT_AVAILABLE: u32 = 0x3;
const STATUSCODE_ACCESS_DENIED: u32 = 0x4;
const STATUSCODE_INTERNAL_ERROR: u32 = 0x5;

/// VehicleAreaWheel
const VEHICLEAREAWHEEL_UNKNOWN: u32 = 0x0;
const VEHICLEAREAWHEEL_LEFT_FRONT: u32 = 0x1;
const VEHICLEAREAWHEEL_RIGHT_FRONT: u32 = 0x2;
const VEHICLEAREAWHEEL_LEFT_REAR: u32 = 0x4;
const VEHICLEAREAWHEEL_RIGHT_REAR: u32 = 0x8;

/// Obd2FuelSystemStatus
const OBD2FUELSYSTEMSTATUS_OPEN_INSUFFICIENT_ENGINE_TEMPERATURE: u32 = 0x1;
const OBD2FUELSYSTEMSTATUS_CLOSED_LOOP: u32 = 0x2;
const OBD2FUELSYSTEMSTATUS_OPEN_ENGINE_LOAD_OR_DECELERATION: u32 = 0x4;
const OBD2FUELSYSTEMSTATUS_OPEN_SYSTEM_FAILURE: u32 = 0x8;
const OBD2FUELSYSTEMSTATUS_CLOSED_LOOP_BUT_FEEDBACK_FAULT: u32 = 0x10;

/// Obd2IgnitionMonitorKind
const OBD2IGNITIONMONITORKIND_SPARK: u32 = 0x0;
const OBD2IGNITIONMONITORKIND_COMPRESSION: u32 = 0x1;

/// Obd2CommonIgnitionMonitors
const OBD2COMMONIGNITIONMONITORS_COMPONENTS_AVAILABLE: u32 = 0x1;
const OBD2COMMONIGNITIONMONITORS_COMPONENTS_INCOMPLETE: u32 = 0x2;
const OBD2COMMONIGNITIONMONITORS_FUEL_SYSTEM_AVAILABLE: u32 = 0x4;
const OBD2COMMONIGNITIONMONITORS_FUEL_SYSTEM_INCOMPLETE: u32 = 0x8;
const OBD2COMMONIGNITIONMONITORS_MISFIRE_AVAILABLE: u32 = 0x10;
const OBD2COMMONIGNITIONMONITORS_MISFIRE_INCOMPLETE: u32 = 0x20;

/// Obd2SparkIgnitionMonitors
const OBD2SPARKIGNITIONMONITORS_EGR_AVAILABLE: u32 = 0x40;
const OBD2SPARKIGNITIONMONITORS_EGR_INCOMPLETE: u32 = 0x80;
const OBD2SPARKIGNITIONMONITORS_OXYGEN_SENSOR_HEATER_AVAILABLE: u32 = 0x100;
const OBD2SPARKIGNITIONMONITORS_OXYGEN_SENSOR_HEATER_INCOMPLETE: u32 = 0x200;
const OBD2SPARKIGNITIONMONITORS_OXYGEN_SENSOR_AVAILABLE: u32 = 0x400;
const OBD2SPARKIGNITIONMONITORS_OXYGEN_SENSOR_INCOMPLETE: u32 = 0x800;
const OBD2SPARKIGNITIONMONITORS_AC_REFRIGERANT_AVAILABLE: u32 = 0x1000;
const OBD2SPARKIGNITIONMONITORS_AC_REFRIGERANT_INCOMPLETE: u32 = 0x2000;
const OBD2SPARKIGNITIONMONITORS_SECONDARY_AIR_SYSTEM_AVAILABLE: u32 = 0x4000;
const OBD2SPARKIGNITIONMONITORS_SECONDARY_AIR_SYSTEM_INCOMPLETE: u32 = 0x8000;
const OBD2SPARKIGNITIONMONITORS_EVAPORATIVE_SYSTEM_AVAILABLE: u32 = 0x10000;
const OBD2SPARKIGNITIONMONITORS_EVAPORATIVE_SYSTEM_INCOMPLETE: u32 = 0x20000;
const OBD2SPARKIGNITIONMONITORS_HEATED_CATALYST_AVAILABLE: u32 = 0x40000;
const OBD2SPARKIGNITIONMONITORS_HEATED_CATALYST_INCOMPLETE: u32 = 0x80000;
const OBD2SPARKIGNITIONMONITORS_CATALYST_AVAILABLE: u32 = 0x100000;
const OBD2SPARKIGNITIONMONITORS_CATALYST_INCOMPLETE: u32 = 0x200000;

/// Obd2CompressionIgnitionMonitors
const OBD2COMPRESSIONIGNITIONMONITORS_EGR_OR_VVT_AVAILABLE: u32 = 0x40;
const OBD2COMPRESSIONIGNITIONMONITORS_EGR_OR_VVT_INCOMPLETE: u32 = 0x80;
const OBD2COMPRESSIONIGNITIONMONITORS_PM_FILTER_AVAILABLE: u32 = 0x100;
const OBD2COMPRESSIONIGNITIONMONITORS_PM_FILTER_INCOMPLETE: u32 = 0x200;
const OBD2COMPRESSIONIGNITIONMONITORS_EXHAUST_GAS_SENSOR_AVAILABLE: u32 = 0x400;
const OBD2COMPRESSIONIGNITIONMONITORS_EXHAUST_GAS_SENSOR_INCOMPLETE: u32 = 0x800;
const OBD2COMPRESSIONIGNITIONMONITORS_BOOST_PRESSURE_AVAILABLE: u32 = 0x1000;
const OBD2COMPRESSIONIGNITIONMONITORS_BOOST_PRESSURE_INCOMPLETE: u32 = 0x2000;
const OBD2COMPRESSIONIGNITIONMONITORS_NOx_SCR_AVAILABLE: u32 = 0x4000;
const OBD2COMPRESSIONIGNITIONMONITORS_NOx_SCR_INCOMPLETE: u32 = 0x8000;
const OBD2COMPRESSIONIGNITIONMONITORS_NMHC_CATALYST_AVAILABLE: u32 = 0x10000;
const OBD2COMPRESSIONIGNITIONMONITORS_NMHC_CATALYST_INCOMPLETE: u32 = 0x20000;

/// Obd2SecondaryAirStatus
const OBD2SECONDARYAIRSTATUS_UPSTREAM: u32 = 0x1;
const OBD2SECONDARYAIRSTATUS_DOWNSTREAM_OF_CATALYCIC_CONVERTER: u32 = 0x2;
const OBD2SECONDARYAIRSTATUS_FROM_OUTSIDE_OR_OFF: u32 = 0x4;
const OBD2SECONDARYAIRSTATUS_PUMP_ON_FOR_DIAGNOSTICS: u32 = 0x8;

/// Obd2FuelType
const OBD2FUELTYPE_NOT_AVAILABLE: u32 = 0x0;
const OBD2FUELTYPE_GASOLINE: u32 = 0x1;
const OBD2FUELTYPE_METHANOL: u32 = 0x2;
const OBD2FUELTYPE_ETHANOL: u32 = 0x3;
const OBD2FUELTYPE_DIESEL: u32 = 0x4;
const OBD2FUELTYPE_LPG: u32 = 0x5;
const OBD2FUELTYPE_CNG: u32 = 0x6;
const OBD2FUELTYPE_PROPANE: u32 = 0x7;
const OBD2FUELTYPE_ELECTRIC: u32 = 0x8;
const OBD2FUELTYPE_BIFUEL_RUNNING_GASOLINE: u32 = 0x9;
const OBD2FUELTYPE_BIFUEL_RUNNING_METHANOL: u32 = 0xa;
const OBD2FUELTYPE_BIFUEL_RUNNING_ETHANOL: u32 = 0xb;
const OBD2FUELTYPE_BIFUEL_RUNNING_LPG: u32 = 0xc;
const OBD2FUELTYPE_BIFUEL_RUNNING_CNG: u32 = 0xd;
const OBD2FUELTYPE_BIFUEL_RUNNING_PROPANE: u32 = 0xe;
const OBD2FUELTYPE_BIFUEL_RUNNING_ELECTRIC: u32 = 0xf;
const OBD2FUELTYPE_BIFUEL_RUNNING_ELECTRIC_AND_COMBUSTION: u32 = 0x10;
const OBD2FUELTYPE_HYBRID_GASOLINE: u32 = 0x11;
const OBD2FUELTYPE_HYBRID_ETHANOL: u32 = 0x12;
const OBD2FUELTYPE_HYBRID_DIESEL: u32 = 0x13;
const OBD2FUELTYPE_HYBRID_ELECTRIC: u32 = 0x14;
const OBD2FUELTYPE_HYBRID_RUNNING_ELECTRIC_AND_COMBUSTION: u32 = 0x15;
const OBD2FUELTYPE_HYBRID_REGENERATIVE: u32 = 0x16;
const OBD2FUELTYPE_BIFUEL_RUNNING_DIESEL: u32 = 0x17;

/// DiagnosticIntegerSensorIndex
const DIAGNOSTICINTEGERSENSORINDEX_FUEL_SYSTEM_STATUS: u32 = 0x0;
const DIAGNOSTICINTEGERSENSORINDEX_MALFUNCTION_INDICATOR_LIGHT_ON: u32 = 0x1;
const DIAGNOSTICINTEGERSENSORINDEX_IGNITION_MONITORS_SUPPORTED: u32 = 0x2;
const DIAGNOSTICINTEGERSENSORINDEX_IGNITION_SPECIFIC_MONITORS: u32 = 0x3;
const DIAGNOSTICINTEGERSENSORINDEX_INTAKE_AIR_TEMPERATURE: u32 = 0x4;
const DIAGNOSTICINTEGERSENSORINDEX_COMMANDED_SECONDARY_AIR_STATUS: u32 = 0x5;
const DIAGNOSTICINTEGERSENSORINDEX_NUM_OXYGEN_SENSORS_PRESENT: u32 = 0x6;
const DIAGNOSTICINTEGERSENSORINDEX_RUNTIME_SINCE_ENGINE_START: u32 = 0x7;
const DIAGNOSTICINTEGERSENSORINDEX_DISTANCE_TRAVELED_WITH_MALFUNCTION_INDICATOR_LIGHT_ON: u32 = 0x8;
const DIAGNOSTICINTEGERSENSORINDEX_WARMUPS_SINCE_CODES_CLEARED: u32 = 0x9;
const DIAGNOSTICINTEGERSENSORINDEX_DISTANCE_TRAVELED_SINCE_CODES_CLEARED: u32 = 0xa;
const DIAGNOSTICINTEGERSENSORINDEX_ABSOLUTE_BAROMETRIC_PRESSURE: u32 = 0xb;
const DIAGNOSTICINTEGERSENSORINDEX_CONTROL_MODULE_VOLTAGE: u32 = 0xc;
const DIAGNOSTICINTEGERSENSORINDEX_AMBIENT_AIR_TEMPERATURE: u32 = 0xd;
const DIAGNOSTICINTEGERSENSORINDEX_TIME_WITH_MALFUNCTION_LIGHT_ON: u32 = 0xe;
const DIAGNOSTICINTEGERSENSORINDEX_TIME_SINCE_TROUBLE_CODES_CLEARED: u32 = 0xf;
const DIAGNOSTICINTEGERSENSORINDEX_MAX_FUEL_AIR_EQUIVALENCE_RATIO: u32 = 0x10;
const DIAGNOSTICINTEGERSENSORINDEX_MAX_OXYGEN_SENSOR_VOLTAGE: u32 = 0x11;
const DIAGNOSTICINTEGERSENSORINDEX_MAX_OXYGEN_SENSOR_CURRENT: u32 = 0x12;
const DIAGNOSTICINTEGERSENSORINDEX_MAX_INTAKE_MANIFOLD_ABSOLUTE_PRESSURE: u32 = 0x13;
const DIAGNOSTICINTEGERSENSORINDEX_MAX_AIR_FLOW_RATE_FROM_MASS_AIR_FLOW_SENSOR: u32 = 0x14;
const DIAGNOSTICINTEGERSENSORINDEX_FUEL_TYPE: u32 = 0x15;
const DIAGNOSTICINTEGERSENSORINDEX_FUEL_RAIL_ABSOLUTE_PRESSURE: u32 = 0x16;
const DIAGNOSTICINTEGERSENSORINDEX_ENGINE_OIL_TEMPERATURE: u32 = 0x17;
const DIAGNOSTICINTEGERSENSORINDEX_DRIVER_DEMAND_PERCENT_TORQUE: u32 = 0x18;
const DIAGNOSTICINTEGERSENSORINDEX_ENGINE_ACTUAL_PERCENT_TORQUE: u32 = 0x19;
const DIAGNOSTICINTEGERSENSORINDEX_ENGINE_REFERENCE_PERCENT_TORQUE: u32 = 0x1a;
const DIAGNOSTICINTEGERSENSORINDEX_ENGINE_PERCENT_TORQUE_DATA_IDLE: u32 = 0x1b;
const DIAGNOSTICINTEGERSENSORINDEX_ENGINE_PERCENT_TORQUE_DATA_POINT1: u32 = 0x1c;
const DIAGNOSTICINTEGERSENSORINDEX_ENGINE_PERCENT_TORQUE_DATA_POINT2: u32 = 0x1d;
const DIAGNOSTICINTEGERSENSORINDEX_ENGINE_PERCENT_TORQUE_DATA_POINT3: u32 = 0x1e;
const DIAGNOSTICINTEGERSENSORINDEX_ENGINE_PERCENT_TORQUE_DATA_POINT4: u32 = 0x1f;
const DIAGNOSTICINTEGERSENSORINDEX_LAST_SYSTEM_INDEX: u32 = 0x1f;

/// DiagnosticFloatSensorIndex
const DIAGNOSTICFLOATSENSORINDEX_CALCULATED_ENGINE_LOAD: u32 = 0x0;
const DIAGNOSTICFLOATSENSORINDEX_ENGINE_COOLANT_TEMPERATURE: u32 = 0x1;
const DIAGNOSTICFLOATSENSORINDEX_SHORT_TERM_FUEL_TRIM_BANK1: u32 = 0x2;
const DIAGNOSTICFLOATSENSORINDEX_LONG_TERM_FUEL_TRIM_BANK1: u32 = 0x3;
const DIAGNOSTICFLOATSENSORINDEX_SHORT_TERM_FUEL_TRIM_BANK2: u32 = 0x4;
const DIAGNOSTICFLOATSENSORINDEX_LONG_TERM_FUEL_TRIM_BANK2: u32 = 0x5;
const DIAGNOSTICFLOATSENSORINDEX_FUEL_PRESSURE: u32 = 0x6;
const DIAGNOSTICFLOATSENSORINDEX_INTAKE_MANIFOLD_ABSOLUTE_PRESSURE: u32 = 0x7;
const DIAGNOSTICFLOATSENSORINDEX_ENGINE_RPM: u32 = 0x8;
const DIAGNOSTICFLOATSENSORINDEX_VEHICLE_SPEED: u32 = 0x9;
const DIAGNOSTICFLOATSENSORINDEX_TIMING_ADVANCE: u32 = 0xa;
const DIAGNOSTICFLOATSENSORINDEX_MAF_AIR_FLOW_RATE: u32 = 0xb;
const DIAGNOSTICFLOATSENSORINDEX_THROTTLE_POSITION: u32 = 0xc;
const DIAGNOSTICFLOATSENSORINDEX_OXYGEN_SENSOR1_VOLTAGE: u32 = 0xd;
const DIAGNOSTICFLOATSENSORINDEX_OXYGEN_SENSOR1_SHORT_TERM_FUEL_TRIM: u32 = 0xe;
const DIAGNOSTICFLOATSENSORINDEX_OXYGEN_SENSOR1_FUEL_AIR_EQUIVALENCE_RATIO: u32 = 0xf;
const DIAGNOSTICFLOATSENSORINDEX_OXYGEN_SENSOR2_VOLTAGE: u32 = 0x10;
const DIAGNOSTICFLOATSENSORINDEX_OXYGEN_SENSOR2_SHORT_TERM_FUEL_TRIM: u32 = 0x11;
const DIAGNOSTICFLOATSENSORINDEX_OXYGEN_SENSOR2_FUEL_AIR_EQUIVALENCE_RATIO: u32 = 0x12;
const DIAGNOSTICFLOATSENSORINDEX_OXYGEN_SENSOR3_VOLTAGE: u32 = 0x13;
const DIAGNOSTICFLOATSENSORINDEX_OXYGEN_SENSOR3_SHORT_TERM_FUEL_TRIM: u32 = 0x14;
const DIAGNOSTICFLOATSENSORINDEX_OXYGEN_SENSOR3_FUEL_AIR_EQUIVALENCE_RATIO: u32 = 0x15;
const DIAGNOSTICFLOATSENSORINDEX_OXYGEN_SENSOR4_VOLTAGE: u32 = 0x16;
const DIAGNOSTICFLOATSENSORINDEX_OXYGEN_SENSOR4_SHORT_TERM_FUEL_TRIM: u32 = 0x17;
const DIAGNOSTICFLOATSENSORINDEX_OXYGEN_SENSOR4_FUEL_AIR_EQUIVALENCE_RATIO: u32 = 0x18;
const DIAGNOSTICFLOATSENSORINDEX_OXYGEN_SENSOR5_VOLTAGE: u32 = 0x19;
const DIAGNOSTICFLOATSENSORINDEX_OXYGEN_SENSOR5_SHORT_TERM_FUEL_TRIM: u32 = 0x1a;
const DIAGNOSTICFLOATSENSORINDEX_OXYGEN_SENSOR5_FUEL_AIR_EQUIVALENCE_RATIO: u32 = 0x1b;
const DIAGNOSTICFLOATSENSORINDEX_OXYGEN_SENSOR6_VOLTAGE: u32 = 0x1c;
const DIAGNOSTICFLOATSENSORINDEX_OXYGEN_SENSOR6_SHORT_TERM_FUEL_TRIM: u32 = 0x1d;
const DIAGNOSTICFLOATSENSORINDEX_OXYGEN_SENSOR6_FUEL_AIR_EQUIVALENCE_RATIO: u32 = 0x1e;
const DIAGNOSTICFLOATSENSORINDEX_OXYGEN_SENSOR7_VOLTAGE: u32 = 0x1f;
const DIAGNOSTICFLOATSENSORINDEX_OXYGEN_SENSOR7_SHORT_TERM_FUEL_TRIM: u32 = 0x20;
const DIAGNOSTICFLOATSENSORINDEX_OXYGEN_SENSOR7_FUEL_AIR_EQUIVALENCE_RATIO: u32 = 0x21;
const DIAGNOSTICFLOATSENSORINDEX_OXYGEN_SENSOR8_VOLTAGE: u32 = 0x22;
const DIAGNOSTICFLOATSENSORINDEX_OXYGEN_SENSOR8_SHORT_TERM_FUEL_TRIM: u32 = 0x23;
const DIAGNOSTICFLOATSENSORINDEX_OXYGEN_SENSOR8_FUEL_AIR_EQUIVALENCE_RATIO: u32 = 0x24;
const DIAGNOSTICFLOATSENSORINDEX_FUEL_RAIL_PRESSURE: u32 = 0x25;
const DIAGNOSTICFLOATSENSORINDEX_FUEL_RAIL_GAUGE_PRESSURE: u32 = 0x26;
const DIAGNOSTICFLOATSENSORINDEX_COMMANDED_EXHAUST_GAS_RECIRCULATION: u32 = 0x27;
const DIAGNOSTICFLOATSENSORINDEX_EXHAUST_GAS_RECIRCULATION_ERROR: u32 = 0x28;
const DIAGNOSTICFLOATSENSORINDEX_COMMANDED_EVAPORATIVE_PURGE: u32 = 0x29;
const DIAGNOSTICFLOATSENSORINDEX_FUEL_TANK_LEVEL_INPUT: u32 = 0x2a;
const DIAGNOSTICFLOATSENSORINDEX_EVAPORATION_SYSTEM_VAPOR_PRESSURE: u32 = 0x2b;
const DIAGNOSTICFLOATSENSORINDEX_CATALYST_TEMPERATURE_BANK1_SENSOR1: u32 = 0x2c;
const DIAGNOSTICFLOATSENSORINDEX_CATALYST_TEMPERATURE_BANK2_SENSOR1: u32 = 0x2d;
const DIAGNOSTICFLOATSENSORINDEX_CATALYST_TEMPERATURE_BANK1_SENSOR2: u32 = 0x2e;
const DIAGNOSTICFLOATSENSORINDEX_CATALYST_TEMPERATURE_BANK2_SENSOR2: u32 = 0x2f;
const DIAGNOSTICFLOATSENSORINDEX_ABSOLUTE_LOAD_VALUE: u32 = 0x30;
const DIAGNOSTICFLOATSENSORINDEX_FUEL_AIR_COMMANDED_EQUIVALENCE_RATIO: u32 = 0x31;
const DIAGNOSTICFLOATSENSORINDEX_RELATIVE_THROTTLE_POSITION: u32 = 0x32;
const DIAGNOSTICFLOATSENSORINDEX_ABSOLUTE_THROTTLE_POSITION_B: u32 = 0x33;
const DIAGNOSTICFLOATSENSORINDEX_ABSOLUTE_THROTTLE_POSITION_C: u32 = 0x34;
const DIAGNOSTICFLOATSENSORINDEX_ACCELERATOR_PEDAL_POSITION_D: u32 = 0x35;
const DIAGNOSTICFLOATSENSORINDEX_ACCELERATOR_PEDAL_POSITION_E: u32 = 0x36;
const DIAGNOSTICFLOATSENSORINDEX_ACCELERATOR_PEDAL_POSITION_F: u32 = 0x37;
const DIAGNOSTICFLOATSENSORINDEX_COMMANDED_THROTTLE_ACTUATOR: u32 = 0x38;
const DIAGNOSTICFLOATSENSORINDEX_ETHANOL_FUEL_PERCENTAGE: u32 = 0x39;
const DIAGNOSTICFLOATSENSORINDEX_ABSOLUTE_EVAPORATION_SYSTEM_VAPOR_PRESSURE: u32 = 0x3a;
const DIAGNOSTICFLOATSENSORINDEX_SHORT_TERM_SECONDARY_OXYGEN_SENSOR_TRIM_BANK1: u32 = 0x3b;
const DIAGNOSTICFLOATSENSORINDEX_SHORT_TERM_SECONDARY_OXYGEN_SENSOR_TRIM_BANK2: u32 = 0x3c;
const DIAGNOSTICFLOATSENSORINDEX_SHORT_TERM_SECONDARY_OXYGEN_SENSOR_TRIM_BANK3: u32 = 0x3d;
const DIAGNOSTICFLOATSENSORINDEX_SHORT_TERM_SECONDARY_OXYGEN_SENSOR_TRIM_BANK4: u32 = 0x3e;
const DIAGNOSTICFLOATSENSORINDEX_LONG_TERM_SECONDARY_OXYGEN_SENSOR_TRIM_BANK1: u32 = 0x3f;
const DIAGNOSTICFLOATSENSORINDEX_LONG_TERM_SECONDARY_OXYGEN_SENSOR_TRIM_BANK2: u32 = 0x40;
const DIAGNOSTICFLOATSENSORINDEX_LONG_TERM_SECONDARY_OXYGEN_SENSOR_TRIM_BANK3: u32 = 0x41;
const DIAGNOSTICFLOATSENSORINDEX_LONG_TERM_SECONDARY_OXYGEN_SENSOR_TRIM_BANK4: u32 = 0x42;
const DIAGNOSTICFLOATSENSORINDEX_RELATIVE_ACCELERATOR_PEDAL_POSITION: u32 = 0x43;
const DIAGNOSTICFLOATSENSORINDEX_HYBRID_BATTERY_PACK_REMAINING_LIFE: u32 = 0x44;
const DIAGNOSTICFLOATSENSORINDEX_FUEL_INJECTION_TIMING: u32 = 0x45;
const DIAGNOSTICFLOATSENSORINDEX_ENGINE_FUEL_RATE: u32 = 0x46;
const DIAGNOSTICFLOATSENSORINDEX_LAST_SYSTEM_INDEX: u32 = 0x46;

/// VmsMessageType
const VMSMESSAGETYPE_SUBSCRIBE: u32 = 0x1;
const VMSMESSAGETYPE_SUBSCRIBE_TO_PUBLISHER: u32 = 0x2;
const VMSMESSAGETYPE_UNSUBSCRIBE: u32 = 0x3;
const VMSMESSAGETYPE_UNSUBSCRIBE_TO_PUBLISHER: u32 = 0x4;
const VMSMESSAGETYPE_OFFERING: u32 = 0x5;
const VMSMESSAGETYPE_AVAILABILITY_REQUEST: u32 = 0x6;
const VMSMESSAGETYPE_SUBSCRIPTIONS_REQUEST: u32 = 0x7;
const VMSMESSAGETYPE_AVAILABILITY_RESPONSE: u32 = 0x8;
const VMSMESSAGETYPE_AVAILABILITY_CHANGE: u32 = 0x9;
const VMSMESSAGETYPE_SUBSCRIPTIONS_RESPONSE: u32 = 0xa;
const VMSMESSAGETYPE_SUBSCRIPTIONS_CHANGE: u32 = 0xb;
const VMSMESSAGETYPE_DATA: u32 = 0xc;
const VMSMESSAGETYPE_PUBLISHER_ID_REQUEST: u32 = 0xd;
const VMSMESSAGETYPE_PUBLISHER_ID_RESPONSE: u32 = 0xe;
const VMSMESSAGETYPE_PUBLISHER_INFORMATION_REQUEST: u32 = 0xf;
const VMSMESSAGETYPE_PUBLISHER_INFORMATION_RESPONSE: u32 = 0x10;
const VMSMESSAGETYPE_START_SESSION: u32 = 0x11;
const VMSMESSAGETYPE_LAST_VMS_MESSAGE_TYPE: u32 = 0x11;

/// VmsBaseMessageIntegerValuesIndex
const VMSBASEMESSAGEINTEGERVALUESINDEX_MESSAGE_TYPE: u32 = 0x0;

/// VmsStartSessionMessageIntegerValuesIndex
const VMSSTARTSESSIONMESSAGEINTEGERVALUESINDEX_SERVICE_ID: u32 = 0x1;
const VMSSTARTSESSIONMESSAGEINTEGERVALUESINDEX_CLIENT_ID: u32 = 0x2;

/// VmsMessageWithLayerIntegerValuesIndex
const VMSMESSAGEWITHLAYERINTEGERVALUESINDEX_LAYER_TYPE: u32 = 0x1;
const VMSMESSAGEWITHLAYERINTEGERVALUESINDEX_LAYER_SUBTYPE: u32 = 0x2;
const VMSMESSAGEWITHLAYERINTEGERVALUESINDEX_LAYER_VERSION: u32 = 0x3;

/// VmsMessageWithLayerAndPublisherIdIntegerValuesIndex
const VMSMESSAGEWITHLAYERANDPUBLISHERIDINTEGERVALUESINDEX_PUBLISHER_ID: u32 = 0x4;

/// VmsOfferingMessageIntegerValuesIndex
const VMSOFFERINGMESSAGEINTEGERVALUESINDEX_PUBLISHER_ID: u32 = 0x1;
const VMSOFFERINGMESSAGEINTEGERVALUESINDEX_NUMBER_OF_OFFERS: u32 = 0x2;
const VMSOFFERINGMESSAGEINTEGERVALUESINDEX_OFFERING_START: u32 = 0x3;

/// VmsSubscriptionsStateIntegerValuesIndex
const VMSSUBSCRIPTIONSSTATEINTEGERVALUESINDEX_SEQUENCE_NUMBER: u32 = 0x1;
const VMSSUBSCRIPTIONSSTATEINTEGERVALUESINDEX_NUMBER_OF_LAYERS: u32 = 0x2;
const VMSSUBSCRIPTIONSSTATEINTEGERVALUESINDEX_NUMBER_OF_ASSOCIATED_LAYERS: u32 = 0x3;
const VMSSUBSCRIPTIONSSTATEINTEGERVALUESINDEX_SUBSCRIPTIONS_START: u32 = 0x4;

/// VmsAvailabilityStateIntegerValuesIndex
const VMSAVAILABILITYSTATEINTEGERVALUESINDEX_SEQUENCE_NUMBER: u32 = 0x1;
const VMSAVAILABILITYSTATEINTEGERVALUESINDEX_NUMBER_OF_ASSOCIATED_LAYERS: u32 = 0x2;
const VMSAVAILABILITYSTATEINTEGERVALUESINDEX_LAYERS_START: u32 = 0x3;

/// VmsPublisherInformationIntegerValuesIndex
const VMSPUBLISHERINFORMATIONINTEGERVALUESINDEX_PUBLISHER_ID: u32 = 0x1;

/// UserFlags
const USERFLAGS_NONE: u32 = 0x0;
const USERFLAGS_SYSTEM: u32 = 0x1;
const USERFLAGS_GUEST: u32 = 0x2;
const USERFLAGS_EPHEMERAL: u32 = 0x4;
const USERFLAGS_ADMIN: u32 = 0x8;
const USERFLAGS_DISABLED: u32 = 0x10;
const USERFLAGS_PROFILE: u32 = 0x20;

/// InitialUserInfoRequestType
const INITIALUSERINFOREQUESTTYPE_FIRST_BOOT: u32 = 0x1;
const INITIALUSERINFOREQUESTTYPE_FIRST_BOOT_AFTER_OTA: u32 = 0x2;
const INITIALUSERINFOREQUESTTYPE_COLD_BOOT: u32 = 0x3;
const INITIALUSERINFOREQUESTTYPE_RESUME: u32 = 0x4;

/// InitialUserInfoResponseAction
const INITIALUSERINFORESPONSEACTION_DEFAULT: u32 = 0x0;
const INITIALUSERINFORESPONSEACTION_SWITCH: u32 = 0x1;
const INITIALUSERINFORESPONSEACTION_CREATE: u32 = 0x2;

/// SwitchUserMessageType
const SWITCHUSERMESSAGETYPE_LEGACY_ANDROID_SWITCH: u32 = 0x1;
const SWITCHUSERMESSAGETYPE_ANDROID_SWITCH: u32 = 0x2;
const SWITCHUSERMESSAGETYPE_VEHICLE_RESPONSE: u32 = 0x3;
const SWITCHUSERMESSAGETYPE_VEHICLE_REQUEST: u32 = 0x4;
const SWITCHUSERMESSAGETYPE_ANDROID_POST_SWITCH: u32 = 0x5;

/// SwitchUserStatus
const SWITCHUSERSTATUS_SUCCESS: u32 = 0x1;
const SWITCHUSERSTATUS_FAILURE: u32 = 0x2;

/// CreateUserStatus
const CREATEUSERSTATUS_SUCCESS: u32 = 0x1;
const CREATEUSERSTATUS_FAILURE: u32 = 0x2;

/// UserIdentificationAssociationType
const USERIDENTIFICATIONASSOCIATIONTYPE_KEY_FOB: u32 = 0x1;
const USERIDENTIFICATIONASSOCIATIONTYPE_CUSTOM_1: u32 = 0x65;
const USERIDENTIFICATIONASSOCIATIONTYPE_CUSTOM_2: u32 = 0x66;
const USERIDENTIFICATIONASSOCIATIONTYPE_CUSTOM_3: u32 = 0x67;
const USERIDENTIFICATIONASSOCIATIONTYPE_CUSTOM_4: u32 = 0x68;

/// UserIdentificationAssociationValue
const USERIDENTIFICATIONASSOCIATIONVALUE_UNKNOWN: u32 = 0x1;
const USERIDENTIFICATIONASSOCIATIONVALUE_ASSOCIATED_CURRENT_USER: u32 = 0x2;
const USERIDENTIFICATIONASSOCIATIONVALUE_ASSOCIATED_ANOTHER_USER: u32 = 0x3;
const USERIDENTIFICATIONASSOCIATIONVALUE_NOT_ASSOCIATED_ANY_USER: u32 = 0x4;

/// UserIdentificationAssociationSetValue
const USERIDENTIFICATIONASSOCIATIONSETVALUE_ASSOCIATE_CURRENT_USER: u32 = 0x1;
const USERIDENTIFICATIONASSOCIATIONSETVALUE_DISASSOCIATE_CURRENT_USER: u32 = 0x2;
const USERIDENTIFICATIONASSOCIATIONSETVALUE_DISASSOCIATE_ALL_USERS: u32 = 0x3;

/// RotaryInputType
const ROTARYINPUTTYPE_ROTARY_INPUT_TYPE_SYSTEM_NAVIGATION: u32 = 0x0;
const ROTARYINPUTTYPE_ROTARY_INPUT_TYPE_AUDIO_VOLUME: u32 = 0x1;

// Create a container of value_type constants to be used by vhal_emulator
/*
class vhal_types_2_0:
    TYPE_STRING : u32 = [const VEHICLEPROPERTYTYPE_STRING]
    TYPE_BYTES  : u32 = [const VEHICLEPROPERTYTYPE_BYTES]
    TYPE_INT32  : u32 = [const VEHICLEPROPERTYTYPE_BOOLEAN,
                    const VEHICLEPROPERTYTYPE_INT32]
    TYPE_INT64  : u32 = [const VEHICLEPROPERTYTYPE_INT64]
    TYPE_FLOAT  : u32 = [const VEHICLEPROPERTYTYPE_FLOAT]
    TYPE_INT32S : u32 = [const VEHICLEPROPERTYTYPE_INT32_VEC]
    TYPE_INT64S : u32 = [const VEHICLEPROPERTYTYPE_INT64_VEC]
    TYPE_FLOATS : u32 = [const VEHICLEPROPERTYTYPE_FLOAT_VEC]
    TYPE_MIXED  : u32 = [const VEHICLEPROPERTYTYPE_MIXED]
*/
